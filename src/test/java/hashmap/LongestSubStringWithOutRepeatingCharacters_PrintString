package problems.easy;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;

public class LongestSubStringWithOutRepeatingCharacters_PrintString {
    public static void main(String[] args) {
        String s = "pwwkew";
        String str = "";

        int release = 0;
        int answer = 0;
        HashMap<Character, Integer> map = new HashMap<>();
        for (int acquire = 0; acquire < s.length(); acquire++) {
            if (map.containsKey(s.charAt(acquire)) && map.get(s.charAt(acquire)) >= release) {
                release = map.get(s.charAt(acquire)) + 1;
            }
            map.put(s.charAt(acquire), acquire);
            answer = Math.max(answer, (acquire - release + 1));
            if (answer != str.length()) {
                str = s.substring(release, (acquire  + 1));
            }
        }
        System.out.println("Length - "+answer);
        System.out.println("Longest SubString "+str);

    }
}
